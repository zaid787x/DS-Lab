#include <stdio.h>

#define MAX_VERTICES 100

int visited[MAX_VERTICES];

// Function to perform Depth-First Search (DFS) traversal
void DFS(int graph[MAX_VERTICES][MAX_VERTICES], int vertices, int start) {
    printf("%d ", start);  // Print the current vertex
    visited[start] = 1;     // Mark the current vertex as visited

    // Explore all adjacent vertices
    for (int i = 0; i < vertices; i++) {
        if (graph[start][i] == 1 && !visited[i]) {
            DFS(graph, vertices, i);  // Recursive call for unvisited adjacent vertex
        }
    }
}

int main() {
    int graph[MAX_VERTICES][MAX_VERTICES] = {0};
    int vertices, edges, u, v;

    // Input number of vertices and edges
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);
    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    // Input edges
    for (int i = 0; i < edges; i++) {
        printf("Enter edge %d (start end): ", i + 1);
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
        graph[v][u] = 1;  // For undirected graph
    }

    // Input starting vertex for DFS traversal
    int start;
    printf("Enter the starting vertex for DFS traversal: ");
    scanf("%d", &start);

    // Initialize visited array
    for (int i = 0; i < vertices; i++) {
        visited[i] = 0;
    }

    // Perform DFS traversal
    printf("DFS Traversal Order: ");
    DFS(graph, vertices, start);
    printf("\n");

    return 0;
}
