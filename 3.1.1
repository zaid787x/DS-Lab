#include <stdio.h>
#include "MergeSortFunctions.c"
void main() {
	int arr[15], i, n;
	printf("Enter array size : ");
	scanf("%d", &n);
	printf("Enter %d elements : ", n);
	for (i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	printf("Before sorting the elements are : ");
	display(arr, n);
	splitAndMerge(arr, 0, n - 1);
	printf("After sorting the elements are : ");
	display(arr, n);
}

Recursion

void display(int arr[15], int n) {
	for (int i=0; i< n; i++)
		{
			printf ("%d ",arr[i]);
		}
	printf ("\n");
}

void merge(int arr[15], int low, int mid, int high) {
	int n1 = mid - low + 1;
	int n2 = high - mid;
	int L[n1], R[n2];
	for (int i=0; i<n1; i++)
		{
			L[i] = arr[low+i];
		}
	for (int j=0; j<n2; j++)
		{
			R[j] = arr[mid+j+1];
		}
	int i=0, j=0, k=low;
	while (i<n1 && j<n2)
		{
			if (L[i] <= R[j])
			{
				arr[k] = L[i];
				i++;
			}
			else
			{
				arr[k] = R[j];
				j++;
			}
			k++;
		}
	while (i < n1) {
		arr [k]= L[i];
		i++, k++;
    }

	while (j < n2)
		{
			arr[k] = R[j];
			j++;
			k++;
		}
}
void splitAndMerge(int arr[15], int low, int high) {
	if (low < high)
	{
		int mid = low + (high - low) / 2;
		splitAndMerge(arr,low,mid);
		splitAndMerge(arr,mid+1,high);
		merge(arr,low,mid,high);
	}
}
	}
